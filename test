#!/bin/bash

if [ $# -ne 2 ]; then
    echo "Usage: $0 <input_file> <number_of_repetitions>"
    exit 1
fi

input_file=$1
total_runs=$2

echo "Computing lower bound..."
lower_bound=$(./lower_bound < "$input_file")
lower_bound=$(printf "%.0f" $lower_bound)
echo "Lower bound: $lower_bound"

echo "Running algorithm1..."
algo1_cost=$(./algorithm1 < "$input_file" | tail -1)
algo1_cost=$(printf "%.0f" $algo1_cost)

echo "Algorithm1 result: $algo1_cost"

sum_costs=0
sum_min=0
min_cost=""
max_cost=""

echo "Running algorithm2 $total_runs times..."
for ((i=1; i<=$total_runs; i++)); do
    algo2_cost=$(./algorithm2 < "$input_file" | tail -1)
    algo2_cost=$(printf "%.0f" $algo2_cost)
    echo "Run $i: $algo2_cost"
    
    sum_costs=$(echo "$sum_costs + $algo2_cost" | bc -l)
    if (( $(echo "$algo2_cost <= $algo1_cost" | bc -l) )); then
        sum_min=$(echo "$sum_min + $algo2_cost" | bc -l)
    else
        sum_min=$(echo "$sum_min + $algo1_cost" | bc -l)
    fi

    if [ -z "$min_cost" ] || (( $(echo "$algo2_cost < $min_cost" | bc -l) )); then
        min_cost=$algo2_cost
    fi
    
    if [ -z "$max_cost" ] || (( $(echo "$algo2_cost > $max_cost" | bc -l) )); then
        max_cost=$algo2_cost
    fi
    
done

echo "--------------------------------------------------------------------------------"
echo "Lower bound: $lower_bound"
echo "Algorithm1: $algo1_cost"
echo "Algorithm2 minimum: $min_cost"
echo "Algorithm2 maximum: $max_cost"
echo "Algorithm2 average: $(echo "scale=2; $sum_costs / $total_runs" | bc -l)"
echo "--------------------------------------------------------------------------------"
echo "Algorithm1 approximation ratio <= $(echo "scale=2; $algo1_cost / $lower_bound" | bc -l)"
echo "Algorithm2 expected approximation ratio <= $(echo "scale=2; $sum_costs / $total_runs / $lower_bound" | bc -l)"
echo "Algorithm2 worst-case approximation ratio <= $(echo "scale=2; $max_cost / $lower_bound" | bc -l)"
echo "min(alg1, alg2) expected approximation ratio <= $(echo "scale=2; $sum_min / $total_runs / $lower_bound" | bc -l)"
echo "--------------------------------------------------------------------------------"